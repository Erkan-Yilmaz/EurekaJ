<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:jsflot="http://www.jsflot.org/taglib/jsflot">

	<a4j:outputPanel id="alertSetupPanel">
		<h:outputText id="selectedAlertPointText"
			value="Selected alert point: #{alertMBean.selectedPath}"></h:outputText><br />
		<rich:spacer height="5"></rich:spacer>
		
		<h:panelGrid rendered="#{!alertMBean.nodeAlertable}" columns="2" style="border: 1px dashed #999;" columnClasses="alignTop">
			<h:graphicImage value="/images/Information_32x32.png"></h:graphicImage>
			<h:outputText>
				This node cannot have an alert attached to it, as it has no reported statistics. Only Leaf nodes can have associated alerts. 
			</h:outputText>
		</h:panelGrid>
		<h:panelGrid rendered="#{alertMBean.nodeAlertable}" columns="2" style="border: 1px dashed #999;" columnClasses="alignTop">
			<h:graphicImage value="/images/Information_32x32.png"></h:graphicImage>
			<h:outputText>
				- An alert must have at least one alert threshold, either Warning, Error or both. An alert will be triggered when the statistics breach the alert threshold, as specifies in the "Alert Type" dropdown box. Possible values are either "Greater Than", "Less Than" or "Equals".<br/> 
				- For some alerts it is neccessary to specify a delay before an alert is triggered to avoid false alerts (it might, for instance, be perfectly acceptable that memory is utilized above the Error threshold for a number of 15-second intervals. This can be specified in the Alert Delay input box.<br/> 
				- If this node has more than one statistic related to it (for instance class instrumentation nodes), it is possible to select which statistics to monitor. <br/>
			</h:outputText>
		</h:panelGrid>
		
		<h:panelGrid columns="4" rendered="#{alertMBean.nodeAlertable}">
			Activated: <h:selectBooleanCheckbox value="#{alertMBean.alert.activated}"></h:selectBooleanCheckbox> <h:outputText /> <h:outputText />
			Error Value: <h:inputText id="errorValue" size="15" value="#{alertMBean.alert.errorValue}" /> Warning Value: <h:inputText size="15" value="#{alertMBean.alert.warningValue}"/>
			Alert Type: <h:selectOneListbox size="1" value="#{alertMBean.alert.selectedAlertType}"><f:selectItems value="#{alertMBean.alertTypes}" /></h:selectOneListbox> Alert Delay: <rich:inputNumberSpinner value="#{alertMBean.alert.alertDelay}" />
			Alert On: <h:selectOneListbox size="1" value="#{alertMBean.alert.alertOn}"><f:selectItems value="#{alertMBean.alertOnTypes}" /></h:selectOneListbox> <h:outputText /> <h:outputText />
			<a4j:commandButton value="Save Alert" actionListener="#{alertMBean.saveAlert}" reRender="alertSetupPanel" />
		</h:panelGrid>
		
		
	</a4j:outputPanel>
</ui:composition>